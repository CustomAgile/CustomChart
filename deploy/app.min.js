Ext.define("Calculator",{config:{calculationType:void 0,field:void 0},constructor:function(a){this.initConfig(a)},prepareChartData:function(a){var b,c=_.groupBy(a.getRange(),function(a){var b=a.get(this.field);return _.isObject(b)?b._refObjectName:b},this),d=_.keys(c);return b="count"===this.calculationType?_.map(c,function(a,b){return[b,a.length]}):_.map(c,function(a,b){var c=_.reduce(a,function(a,b){var c=this._getValueFieldForCalculationType();return a+b.get(c)},0,this);return[b,c]},this),{categories:d,series:[{name:this.field,type:this.seriesType,data:b}]}},_getValueFieldForCalculationType:function(){switch(this.calculationType){case"leafplanest":return"LeafStoryPlanEstimateTotal";case"prelimest":return"PreliminaryEstimateValue";default:return"PlanEstimate"}}}),Ext.define("BarCalculator",{extend:"Calculator",seriesType:"column"}),Ext.define("BarChart",{xtype:"barchart",extend:"Rally.ui.chart.Chart",requires:["BarCalculator"],chartConfig:{chart:{type:"column"},title:{text:""},tooltip:{headerFormat:"",pointFormat:"{point.name}: <b>{point.y}</b>"},yAxis:{min:0,title:{text:""},stackLabels:{enabled:!0,style:{fontWeight:"bold",color:"gray"}}},plotOptions:{column:{stacking:"normal",dataLabels:{enabled:!1},showInLegend:!1,colorByPoint:!0}}},calculatorType:"BarCalculator"}),Ext.define("PieCalculator",{extend:"Calculator",seriesType:"pie"}),Ext.define("PieChart",{xtype:"piechart",extend:"Rally.ui.chart.Chart",requires:["PieCalculator"],chartConfig:{chart:{type:"pie",plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1},title:{text:""},tooltip:{headerFormat:"",pointFormat:"{point.name}: <b>{point.percentage:.1f}%</b>"},plotOptions:{pie:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,format:"<b>{point.name}</b>: {point.percentage:.1f} %",style:{color:"black"}}}}},calculatorType:"PieCalculator"}),Ext.define("CustomChartApp",{extend:"Rally.app.App",componentCls:"app",layout:"fit",config:{defaultSettings:{types:"defect",chartType:"piechart",aggregationField:"State",aggregationType:"count",query:""}},launch:function(){this.getSetting("types")?Rally.data.wsapi.ModelFactory.getModels({types:this._getTypesSetting()}).then({success:this._onModelsLoaded,scope:this}):this.fireEvent("appsettingsneeded")},getSettingsFields:function(){var a=this;return[{name:"chartType",xtype:"rallycombobox",plugins:["rallyfieldvalidationui"],fieldLabel:"Chart Type",displayField:"name",valueField:"value",editable:!1,allowBlank:!1,store:Ext.create("Ext.data.Store",{fields:["name","value"],data:[{name:"Pie",value:"piechart"},{name:"Bar",value:"barchart"}]})},{name:"types",xtype:"rallycombobox",plugins:["rallyfieldvalidationui"],allowBlank:!1,editable:!1,autoSelect:!1,validateOnChange:!1,validateOnBlur:!1,fieldLabel:"Type",shouldRespondToScopeChange:!0,context:this.getContext(),storeConfig:{model:"TypeDefinition",sorters:[{property:"DisplayName"}],fetch:["DisplayName","TypePath"],filters:[{property:"UserListable",value:!0}],autoLoad:!1,remoteSort:!1,sortOnLoad:!0,remoteFilter:!0},displayField:"DisplayName",valueField:"TypePath",listeners:{change:function(a){a.fireEvent("typeselected",a.getValue(),a.context)},ready:function(a){a.fireEvent("typeselected",a.getValue(),a.context)}},bubbleEvents:["typeselected"],readyEvent:"ready",handlesEvents:{projectscopechanged:function(a){this.refreshWithNewContext(a)}}},{name:"aggregationField",xtype:"rallyfieldcombobox",plugins:["rallyfieldvalidationui"],fieldLabel:"Aggregate By",readyEvent:"ready",allowBlank:!1,validateOnChange:!1,validateOnBlur:!1,handlesEvents:{typeselected:function(a,b){var c=Ext.Array.from(a)[0];c?this.refreshWithNewModelType(c,b):(this.store.removeAll(),this.reset())}},listeners:{ready:function(a){a.store.filterBy(function(a){var b=a.get("fieldDefinition"),c=b.attributeDefinition;return c&&!c.Hidden&&"COLLECTION"!==c.AttributeType&&!b.isMappedFromArtifact});var b=Ext.Array.map(a.store.getRange(),function(b){return b.get(a.getValueField())});Ext.Array.contains(b,a.getValue())||a.setValue(b[0])}}},{name:"aggregationType",xtype:"rallycombobox",plugins:["rallyfieldvalidationui"],fieldLabel:"Aggregation Type",displayField:"name",valueField:"value",editable:!1,allowBlank:!1,store:Ext.create("Ext.data.Store",{fields:["name","value"],data:[{name:"Count",value:"count"},{name:"Plan Estimate",value:"estimate"},{name:"Leaf Story Plan Estimate Total",value:"leafplanest"},{name:"Preliminary Estimate Value",value:"prelimest"}]}),handlesEvents:{typeselected:function(b,c){var d=Ext.Array.from(b)[0];Rally.data.ModelFactory.getModel({type:d,success:function(b){this.store.filterBy(function(c){return"count"===c.get("value")||b.hasField(a._getFieldForAggregationType(c.get("value")))})},scope:this})}}},{type:"query"}]},_onModelsLoaded:function(a){this.models=_.values(a);var b=this.getContext(),c=_.pluck(this.models,"typePath"),d={xtype:"rallygridboard",toggleState:"chart",chartConfig:this._getChartConfig(),plugins:[{ptype:"rallygridboardinlinefiltercontrol",showInChartMode:!0,inlineFilterButtonConfig:{stateful:!0,stateId:b.getScopedStateId("filters"),filterChildren:!0,modelNames:c,inlineFilterPanelConfig:{quickFilterPanelConfig:{defaultFields:this._getQuickFilters()}}}},{ptype:"rallygridboardactionsmenu",menuItems:[{text:"Export to CSV...",handler:function(){window.location=Rally.ui.gridboard.Export.buildCsvExportUrl(this.down("rallygridboard").getGridOrBoard())},scope:this}],buttonConfig:{iconCls:"icon-export",toolTipConfig:{html:"Export",anchor:"top",hideDelay:0}}}],context:b,modelNames:c,storeConfig:{filters:this._getFilters()}};this.add(d)},_getQuickFilters:function(){var a=[],b=this._getTypesSetting(),c=b[0];return b.length>1&&a.push("ModelType"),Rally.data.ModelTypes.isArtifact(c)&&(a.push("Owner"),Rally.data.ModelTypes.isPortfolioItem(c)?a.push("State"):a.push("ScheduleState")),a},_getTypesSetting:function(){return this.getSetting("types").split(",")},_getChartConfig:function(){return{xtype:this.getSetting("chartType"),storeType:"Rally.data.wsapi.artifact.Store",chartColors:["#FF8200","#F6A900","#FAD200","#8DC63F","#1E7C00","#337EC6","#005EB8","#7832A5","#DA1884","#C0C0C0"],storeConfig:{models:this._getTypesSetting(),context:this.getContext().getDataContext(),limit:1/0,fetch:this._getChartFetch(),sorters:this._getChartSort()},calculatorConfig:{calculationType:this.getSetting("aggregationType"),field:this.getSetting("aggregationField")}}},onTimeboxScopeChange:function(a){this.callParent(arguments),this._addBoard()},_getChartFetch:function(){var a=this.getSetting("aggregationField"),b=this.getSetting("aggregationType"),c=["FormattedID","Name",a];return"count"!==b&&c.push(this._getFieldForAggregationType(b)),c},_getFieldForAggregationType:function(a){return"estimate"===a?"PlanEstimate":"prelimest"===a?"PreliminaryEstimateValue":"leafplanest"===a?"LeafStoryPlanEstimateTotal":void 0},_getChartSort:function(){return[{property:this.getSetting("aggregationField"),direction:"ASC"}]},_getFilters:function(){var a=[],b=this.getContext().getTimeboxScope();return this.getSetting("query")&&a.push(Rally.data.QueryFilter.fromQueryString(this.getSetting("query"))),b&&_.any(this.models,b.isApplicable,b)&&a.push(b.getQueryFilter()),a}});